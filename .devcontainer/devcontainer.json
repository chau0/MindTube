{
  "name": "MindTube Development",
  "build": {
    "dockerfile": "Dockerfile",
    "context": ".."
  },
  
  // Features to add to the dev container
  "features": {
    "ghcr.io/devcontainers/features/common-utils:2": {
      "installZsh": true,
      "configureZshAsDefaultShell": true,
      "installOhMyZsh": true,
      "upgradePackages": true,
      "username": "vscode",
      "userUid": "automatic",
      "userGid": "automatic"
    },
    "ghcr.io/devcontainers/features/python:1": {
      "version": "3.12",
      "installTools": true,
      "optimize": true
    },
    "ghcr.io/devcontainers/features/node:1": {
      "version": "20",
      "nodeGypDependencies": true,
      "installYarnUsingApt": true
    },
    "ghcr.io/devcontainers/features/git:1": {
      "ppa": true,
      "version": "latest"
    },
    "ghcr.io/devcontainers/features/github-cli:1": {
      "installDirectlyFromGitHubRelease": true,
      "version": "latest"
    },
    "ghcr.io/devcontainers/features/docker-in-docker:2": {
      "moby": true,
      "azureDnsAutoDetection": true,
      "installDockerBuildx": true,
      "version": "latest",
      "dockerDashComposeVersion": "v2"
    }
  },

  // Configure tool-specific properties
  "customizations": {
    "vscode": {
      "settings": {
        "python.defaultInterpreterPath": "/usr/local/bin/python",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": false,
        "python.linting.flake8Enabled": false,
        "python.formatting.provider": "none",
        "python.linting.mypyEnabled": true,
        "python.testing.pytestEnabled": true,
        "python.testing.unittestEnabled": false,
        "python.testing.pytestArgs": [
          "tests"
        ],
        "[python]": {
          "editor.defaultFormatter": "charliermarsh.ruff",
          "editor.codeActionsOnSave": {
            "source.organizeImports": "explicit",
            "source.fixAll": "explicit"
          },
          "editor.formatOnSave": true
        },
        "[json]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode"
        },
        "[yaml]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode"
        },
        "[markdown]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode",
          "editor.wordWrap": "on"
        },
        "files.associations": {
          "*.md": "markdown"
        },
        "terminal.integrated.defaultProfile.linux": "zsh",
        "git.autofetch": true,
        "git.enableSmartCommit": true,
        "editor.rulers": [88],
        "editor.tabSize": 4,
        "editor.insertSpaces": true,
        "files.trimTrailingWhitespace": true,
        "files.insertFinalNewline": true,
        "files.trimFinalNewlines": true
      },
      
      "extensions": [
        // Python development
        "ms-python.python",
        "ms-python.mypy-type-checker",
        "charliermarsh.ruff",
        
        // Testing
        "ms-python.pytest",
        
        // Git and GitHub
        "github.vscode-pull-request-github",
        "github.copilot",
        "github.copilot-chat",
        "eamodio.gitlens",
        
        // General development
        "ms-vscode.vscode-json",
        "redhat.vscode-yaml",
        "esbenp.prettier-vscode",
        "bradlc.vscode-tailwindcss",
        
        // Documentation
        "yzhang.markdown-all-in-one",
        "davidanson.vscode-markdownlint",
        
        // Docker
        "ms-azuretools.vscode-docker",
        
        // REST API testing
        "humao.rest-client",
        
        // Productivity
        "ms-vscode.todo-highlight",
        "gruntfuggly.todo-tree",
        "streetsidesoftware.code-spell-checker"
      ]
    }
  },

  // Use 'forwardPorts' to make a list of ports inside the container available locally
  "forwardPorts": [
    3000,  // Next.js dev server
    8000,  // FastAPI server
    8888,  // Jupyter notebook
    6379,  // Redis
    5432,  // PostgreSQL
    9000,  // MinIO API
    9001   // MinIO Console
  ],

  // Configure port attributes
  "portsAttributes": {
    "3000": {
      "label": "Next.js Web App",
      "onAutoForward": "notify"
    },
    "8000": {
      "label": "FastAPI Backend",
      "onAutoForward": "notify"
    },
    "8888": {
      "label": "Jupyter Notebook",
      "onAutoForward": "ignore"
    }
  },

  // Use 'postCreateCommand' to run commands after the container is created
  "postCreateCommand": "make setup",

  // Use 'postStartCommand' to run commands after the container starts
  "postStartCommand": "echo 'ðŸš€ MindTube dev container is ready! Run make dev to get started.'",

  // Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root
  "remoteUser": "vscode",

  // Set container environment variables
  "containerEnv": {
    "PYTHONPATH": "/workspaces/mindtube/packages/core",
    "ENVIRONMENT": "development"
  },

  // Mount the workspace
  "workspaceMount": "source=${localWorkspaceFolder},target=/workspaces/mindtube,type=bind,consistency=cached",
  "workspaceFolder": "/workspaces/mindtube",

  // Lifecycle scripts
  "initializeCommand": "echo 'Initializing MindTube development environment...'",
  "onCreateCommand": "echo 'Container created successfully!'",
  
  // Container configuration
  "runArgs": [
    "--name=mindtube-devcontainer"
  ],

  // Additional mount points for development
  "mounts": [
    "source=mindtube-vscode-extensions,target=/home/vscode/.vscode-server/extensions,type=volume",
    "source=mindtube-pip-cache,target=/home/vscode/.cache/pip,type=volume"
  ]
}